{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrid.js","components/AddContenido.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","state","setState","onSubmit","e","preventDefault","console","log","trim","length","categorias","estado","type","value","onChange","event","target","handleKeyPress","getGifs","category","a","ApiRest","encodeURI","fetch","resp","json","data","gif","map","img","id","title","url","images","downsized_medium","GifGrid","className","src","alt","AddContenido","loading","setImages","useEffect","then","gifs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gCACTN,EAAMO,OAAOC,OAAO,IACnBV,GAAc,SAAAW,GAAU,OAAKT,GAAL,mBAAcS,OACtCR,GAAS,SAACS,GAAD,MAAoB,QAIjC,SACI,uBACIC,KAAK,OACLC,MAAOZ,EACPa,SAAY,SAACC,IAlBF,SAACA,GACpBb,EAASa,EAAMC,OAAOH,OACtBP,QAAQC,IAAIQ,EAAMC,OAAOH,OAgBOI,CAAeF,S,uBCvB1CG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,uDACJ,mCADI,cAEyDC,UAAUH,GAFnE,gDAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAGDC,EAAMD,EAAKE,KAAI,SAACC,GAAO,IAAD,EAExB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAbvB,kBAgBZL,GAhBY,4CAAH,sDCEPQ,EAAU,SAAC,GAAkD,IAAD,IAAhDN,IAASE,GAAuC,EAA3CD,GAA2C,EAAvCC,OAAOC,EAAgC,EAAhCA,IAErC,OACI,sBAAKI,UAAU,wCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAe,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAC1B,ECHwB,SAACA,GACzB,MAA4BnB,mBAAS,CAAC0B,KAAM,GAAIc,SAAS,IAAzD,mBAAOP,EAAP,KAAeQ,EAAf,KAgBA,OAdAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAACC,GACHH,EACI,CACIf,KAAMkB,EACNJ,SAAS,SAMtB,CAACrB,IAEGc,EDdyBY,CAAa1B,GAAhCc,EAAb,EAAOP,KAAcc,EAArB,EAAqBA,QAErB,OACI,eAAC,WAAD,WACI,6BAAKrB,IACL,sBAAKiB,UAAU,gBAAf,UACKI,GAAW,4CAERP,EAAOL,KAAI,SAACC,GAAD,OAEP,aADA,CACC,EAAD,CACAA,IAAKA,GADSA,EAAIC,cEY3BgB,EAvBM,WAEjB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAKA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,8BACKgD,EAAWnB,KAAI,SAACT,GACb,OAAO,cAAC,EAAD,CAAcA,SAAUA,GAAeA,YCjBlE6B,IAASC,OACH,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f82d5a53.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [state, setState] = useState(\"\")//Undefined, con comillas es un String VACIO\r\n    const handleKeyPress = (event)=>{\r\n        setState(event.target.value);\r\n        console.log(event.target.value)\r\n        \r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(\"Submit mÃ¡s hecho que que.\");\r\n        if(state.trim().length>2){\r\n            setCategories(categorias => [state,...categorias])\r\n            setState((estado)=> (estado =\"\"))\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={state}\r\n                onChange = {(event) => {handleKeyPress(event)}}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async(category) => {\r\n    const ApiKey = \"twWmjcdfWyH38x8ABDY4nmf1jsHCFBZa\";\r\n    const ApiRest = `https://api.giphy.com/v1/gifs/search?api_key=${ApiKey}&q=${encodeURI(category)}&limit=10&offset=0&rating=g&lang=es`;\r\n    const resp = await fetch(ApiRest);\r\n    //console.log(gifsValores.url);\r\n    const {data} = await resp.json();\r\n    //console.log(data)\r\n\r\n    const gif = data.map((img)=>{\r\n        //console.log(img.images?.downsized_medium.url);\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gif;\r\n    //console.log(gif);\r\n    //const {url} = await data[0].images.original;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGrid = ({img:{id, title, url}}) =>/* {title, id, url} */ {\r\n    //console.log(id);\r\n    return (\r\n        <div className=\"lista animate__animated animate__tada\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport \"../index.css\"\r\nimport {GifGrid} from './GifGrid';\r\n\r\nexport const AddContenido = ({category}) => {\r\n    const {data: images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h3>{category}</h3>\r\n            <div className=\"lista_horizon\">\r\n                {loading && <p>Cargando...</p>}\r\n                {\r\n                    images.map((img)=>(\r\n                        //console.log(gif);\r\n                        <GifGrid key={img.id} \r\n                        img={img}/>\r\n                        \r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import {useState, useEffect} from 'react'\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [images, setImages] = useState({data: [], loading: true}/* [{\"url\": \"hola\", \"id\":\"Cox\"},{\"url\": \"chao\", \"id\":\"Helen\"}] */);\r\n    \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then((gifs) => {\r\n            setImages(\r\n                {\r\n                    data: gifs,\r\n                    loading: false\r\n                }\r\n            );\r\n        })\r\n        \r\n        /* getGifs({setImages, category}); */\r\n    }, [category])/* // eslint-disable-line react-hooks/exhaustive-deps */\r\n\r\n    return images;\r\n}\r\n","import React, { Fragment, useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { AddContenido } from \"./components/AddContenido\"\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n    //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"]\r\n    const [categories, setCategories] = useState([\"One Punch\"/* , \"Samurai X\", \"Dragon Ball\" */])\r\n    /* const handleAdd = (serie)=>{\r\n        setCategories([serie,...categories])\r\n    } */\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n            {/* <button onClick={()=>{handleAdd(\"Holaa\")}}>Agregar</button> */}\r\n            \r\n            <div>\r\n                {categories.map((category) =>{\r\n                    return <AddContenido category={category} key={category} />\r\n                })}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\"\nReactDOM.render(\n      <GifExpertApp />,\n      document.getElementById('root')\n);\n"],"sourceRoot":""}